function hideunlclosedspinners() {
  $(".spinnerbox").each(function () {
    $('[data-spinnerid="' + $(this).attr("id") + '"]').length == 0 &&
      $(this).remove();
  });
}
function showspinner(n) {
  hideunlclosedspinners();
  var t = $(spinnerHtml);
  n || (n = $("body"));
  n.append(t[0].outerHTML);
  n.find(".spinnerbox").show();
}
function hidespinner(n) {
  hideunlclosedspinners();
  n || (n = $("body"));
  $(".spinnerboxglobal .spinnerbox").hide();
  n.find(".spinnerbox")
    .not(
      n.find("[data-json] .spinnerbox").add($(".spinnerboxglobal .spinnerbox"))
    )
    .remove();
}
function alignspinner(n, t, i) {
  var u = n.offset(),
    r = "loaderi" + loaderid;
  return (
    n.attr("data-spinnerid")
      ? (r = n.attr("data-spinnerid"))
      : n.attr("data-spinnerid", r),
    t.attr("id", r),
    loaderid++,
    i ||
      (t.css("position", "absolute"),
      t.css("top", u.top),
      t.css("left", u.left),
      t.css("width", n.width()),
      t.css("height", n.height()),
      t.css("min-height", "30px")),
    t.show(),
    t
  );
}
function getcl(n, t) {
  if (n.length > 0) {
    var i = n.parent();
    return (
      n.prop("tagName") == "DIV" &&
        n.attr("data-json") &&
        ((i = n),
        $(this).attr("data-jltableform") ||
          ($(this).hasClass("tablebody") && (t = !1))),
      { cl: i, isInnerloader: t }
    );
  }
}
function showprogressbar() {
  $(".header").addClass("progressanimation");
}
function hideprogressbar() {
  setTimeout(function () {
    $(".header").removeClass("progressanimation");
  }, 1e3);
}
function showabsolutespinner(n) {
  var t = $(spinnerHtml),
    r = getcl(n, !0),
    u = r.cl,
    i = r.isInnerloader;
  if (
    (i && (u.css("position", "relative"), t.attr("data-static", !0)),
    (t = alignspinner(n, t, i)),
    u.append(t),
    t.show(),
    !i)
  )
    var e = 200,
      f = 0,
      o = setInterval(function () {
        f++;
        n.attr("data-spinnerid") && f < e
          ? alignspinner(n, t)
          : (hideabsolutespinner(t), clearInterval(o));
      }, 500);
  hideunlclosedspinners();
}
function hideabsolutespinner(n) {
  var t = getcl(n, !0),
    i = t.cl,
    r = t.isInnerloader;
  i.css("position", "");
  $("#" + n.attr("data-spinnerid")).remove();
  n.removeAttr("data-spinnerid");
  hideunlclosedspinners();
}
var webApiUrl = $("#WebApiUrl").val(),
  rootUrl = $("#RootUrl").val(),
  ZeroValue = $("#NullValue").val(),
  loaderid,
  disableapiurl,
  spinnerHtml;
getcache("EncValue") &&
  getcache("EncValue") != ZeroValue &&
  remcache("bindmanagercache");
setcache("EncValue", ZeroValue);
$(window).on("updatejldefaults", function () {
  $.fn.binder.methods.defaults.nullvalue = ZeroValue;
});
loaderid = 0;
disableapiurl = !1;
spinnerHtml = "";
$(function () {
  var n;
  spinnerHtml = $(".spinnerbox")[0].outerHTML;
  $(".spinnerbox").remove();
  var t = navigator.userAgent.indexOf("Chrome") > -1,
    o = navigator.userAgent.indexOf("MSIE") > -1,
    s = navigator.userAgent.indexOf("Firefox") > -1,
    u = navigator.userAgent.indexOf("Safari") > -1,
    h = navigator.userAgent.indexOf("Camino") > -1,
    e = navigator.userAgent.toLowerCase().indexOf("op") > -1;
  t && u && (u = !1);
  t && e && (t = !1);
  /CriOS/i.test(navigator.userAgent) && (t = !0);
  t ||
    alert(
      "Sorry, We are not supporting this browser, Please use Google Chrome Latest Version to use eTalenter. <a href='https://www.google.com/chrome/' >Download Now/Update</a>",
      !1,
      !1,
      !1,
      "w",
      2e4
    );
  $("body").on("click", "#spinnerboxclose", function () {
    $(this).closest(".spinnerbox").remove();
  });
  $("body").on("beforesavetablerow", "[data-jltableformrow]", function (n) {
    n.target == n.currentTarget && showabsolutespinner($(this));
  });
  $("body").on("aftersavetablerow", "[data-jltableformrow]", function (n) {
    n.target == n.currentTarget && hideabsolutespinner($(this));
  });
  $("body").on(
    "beforemakerequestdata",
    "[data-json]:not(.optdiv)",
    function (n) {
      n.target == n.currentTarget && showabsolutespinner($(this));
    }
  );
  $("body").on("afterappendcomplete", "[data-json]:not(.optdiv)", function (n) {
    n.target == n.currentTarget && hideabsolutespinner($(this));
  });
  $("body").on("afterrequest", "[data-json]:not(.optdiv)", function (n) {
    n.target == n.currentTarget && hideabsolutespinner($(this));
  });
  n = 0;
  $.ajaxSetup({
    async: !0,
    cache: !0,
    crossDomain: !0,
    beforeSend: function (t, i) {
      $(".spinnerbox:visible").length == 0 &&
        ($(".cycle_container").addClass("hidden"),
        $(".cycle_container").removeAttr("style"),
        $(".cycle_container").removeClass("hidden"),
        setTimeout(function () {
          $(".spinnerbox:visible").length == 0 &&
            ($(".cycle_container").removeClass("hidden"),
            $(".cycle_container").css("left", "100%"));
        }, 100));
      i.type &&
        i.type.toLowerCase() != "get" &&
        (n++,
        disableapiurl ||
          (webApiUrl &&
            ((i.url = i.url.trim("/")), (i.url = webApiUrl + i.url))));
      disableapiurl = !1;
    },
    complete: function (t) {
      n--;
      n == 0;
      t.statusText == "ReLogin" &&
        (window.location.href = $("#LoginUrl").val());
    },
  });
  $(document).ready(function () {
    n == 0 &&
      $(".spinnerboxglobal .spinnerbox").hide().parent().addClass("hidden");
  });
  $("body").on(
    "change blur keyup",
    "[data-showonvalue],[data-hideonvalue]",
    function () {
      var n = $(this).val();
      n != ZeroValue
        ? ($($(this).attr("data-showonvalue")).show(),
          $($(this).attr("data-hideonvalue")).hide())
        : ($($(this).attr("data-showonvalue")).hide(),
          $($(this).attr("data-hideonvalue")).show());
    }
  );
  $("body").on("click", "#usersrolesmenulist .changerolemenu", function () {
    var n = {};
    n.Filterby = [];
    n.Filterby.push({ key: "UserRoleId", value: $(this).attr("data-role") });
    $.post("ChangeRole", n, function () {
      window.location.href = "/";
    });
  });
  $("body").on("click", "#menuaccordion .navigationlink", function (n) {
    var i = $(this).attr("href"),
      r,
      t;
    i &&
      i != "#" &&
      ((r = $(this).closest(".panel-menu").attr("data-roleid")),
      r != $("#filterbyuserroleid").val() &&
        (n.preventDefault(),
        (t = {}),
        (t.Filterby = []),
        t.Filterby.push({
          key: "UserRoleId",
          value: $(this).closest(".panel-menu").attr("data-roleid"),
        }),
        $.post("ChangeRole", t, function () {
          window.location.href = i;
        })));
  });
  if (window.Worker) {
    var f = new Worker("/Scripts/Worker/jlworker.js"),
      r = 0,
      i = {};
    $.jQuerypost = $.post;
    $.post = function (t, u, e) {
      return $.ajaxSettings.enctype == "multipart/form-data"
        ? $.jQuerypost(t, u, e)
        : ($(".spinnerbox:visible").length == 0 &&
            ($(".cycle_container").addClass("hidden"),
            $(".cycle_container").removeAttr("style"),
            $(".cycle_container").removeClass("hidden"),
            setTimeout(function () {
              $(".spinnerbox:visible").length == 0 &&
                ($(".cycle_container").removeClass("hidden"),
                $(".cycle_container").css("left", "100%"));
            }, 100)),
          n++,
          r++,
          (i["post" + r] = function (t) {
            n--;
            e(t);
          }),
          f.postMessage([
            "post",
            window.JSONstringify({
              url: webApiUrl + t,
              data: u,
              workercallbacksi: r,
            }),
          ]),
          this);
    };
    $.fail = function () {};
    f.onmessage = function (t) {
      var r = t.data.split("{").length > 1 ? JSON.parse(t.data) : t.data,
        u = r.task;
      switch (u) {
        case "post":
          i["post" + r.workercallbacksi] &&
            (i["post" + r.workercallbacksi](r.results),
            n == 0 &&
              $(".spinnerboxglobal .spinnerbox")
                .hide()
                .parent()
                .addClass("hidden"));
          break;
        case "postfail":
          i["post" + r.workercallbacksi] &&
            (n--,
            $(".animatedbackground").removeClass("animatedbackground"),
            $(".spinnerboxglobal .spinnerbox")
              .hide()
              .parent()
              .addClass("hidden"),
            $(".spinnerbox").not($(".spinnerboxglobal .spinnerbox")).remove(),
            r.failObject.xhr.status == 400 &&
              alert(
                "You are not permitted to access this function",
                !1,
                !1,
                !1,
                "w"
              ),
            r.failObject.xhr.status == 400 &&
              alert("Sorry Network Error Occured, Try again", !1, !1, !1, "w"));
      }
    };
  }
});
