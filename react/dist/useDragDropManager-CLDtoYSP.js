import{g as v,r as u}from"./mainweb-D1OHSR2l.js";import{i as l,D as m}from"./index-D-IG7Y8n.js";var h=function e(t,r){if(t===r)return!0;if(t&&r&&typeof t=="object"&&typeof r=="object"){if(t.constructor!==r.constructor)return!1;var o,n,s;if(Array.isArray(t)){if(o=t.length,o!=r.length)return!1;for(n=o;n--!==0;)if(!e(t[n],r[n]))return!1;return!0}if(t.constructor===RegExp)return t.source===r.source&&t.flags===r.flags;if(t.valueOf!==Object.prototype.valueOf)return t.valueOf()===r.valueOf();if(t.toString!==Object.prototype.toString)return t.toString()===r.toString();if(s=Object.keys(t),o=s.length,o!==Object.keys(r).length)return!1;for(n=o;n--!==0;)if(!Object.prototype.hasOwnProperty.call(r,s[n]))return!1;for(n=o;n--!==0;){var c=s[n];if(!e(t[c],r[c]))return!1}return!0}return t!==t&&r!==r};const O=v(h),p=typeof window<"u"?u.useLayoutEffect:u.useEffect;function w(e,t,r){const[o,n]=u.useState(()=>t(e)),s=u.useCallback(()=>{const c=t(e);O(o,c)||(n(c),r&&r())},[o,e,r]);return p(s),[o,s]}function C(e,t,r){const[o,n]=w(e,t,r);return p(function(){const c=e.getHandlerId();if(c!=null)return e.subscribeToStateChange(n,{handlerIds:[c]})},[e,n]),o}function I(e,t,r){return C(t,e||(()=>({})),()=>r.reconnect())}function j(e,t){const r=[];return typeof e!="function"&&r.push(e),u.useMemo(()=>typeof e=="function"?e():e,r)}function H(e,t,r){const o=r.getRegistry(),n=o.addTarget(e,t);return[n,()=>o.removeTarget(n)]}function P(e,t,r){const o=r.getRegistry(),n=o.addSource(e,t);return[n,()=>o.removeSource(n)]}function T(e,t,r,o){let n;if(n!==void 0)return!!n;if(e===t)return!0;if(typeof e!="object"||!e||typeof t!="object"||!t)return!1;const s=Object.keys(e),c=Object.keys(t);if(s.length!==c.length)return!1;const d=Object.prototype.hasOwnProperty.bind(t);for(let a=0;a<s.length;a++){const f=s[a];if(!d(f))return!1;const y=e[f],g=t[f];if(n=void 0,n===!1||n===void 0&&y!==g)return!1}return!0}function M(e){return e!==null&&typeof e=="object"&&Object.prototype.hasOwnProperty.call(e,"current")}function E(e){if(typeof e.type=="string")return;const t=e.type.displayName||e.type.name||"the component";throw new Error(`Only native element nodes can now be passed to React DnD connectors.You can either wrap ${t} into a <div>, or turn it into a drag source or a drop target itself.`)}function x(e){return(t=null,r=null)=>{if(!u.isValidElement(t)){const s=t;return e(s,r),s}const o=t;return E(o),D(o,r?s=>e(s,r):e)}}function k(e){const t={};return Object.keys(e).forEach(r=>{const o=e[r];if(r.endsWith("Ref"))t[r]=e[r];else{const n=x(o);t[r]=()=>n}}),t}function i(e,t){typeof e=="function"?e(t):e.current=t}function D(e,t){const r=e.ref;return l(typeof r!="string","Cannot connect React DnD to an element with an existing string ref. Please convert it to use a callback ref instead, or wrap it into a <span> or <div>. Read more: https://reactjs.org/docs/refs-and-the-dom.html#callback-refs"),r?u.cloneElement(e,{ref:o=>{i(r,o),i(t,o)}}):u.cloneElement(e,{ref:t})}function q(){const{dragDropManager:e}=u.useContext(m);return l(e!=null,"Expected drag drop context"),e}export{p as a,j as b,I as c,P as d,M as i,H as r,T as s,q as u,k as w};
