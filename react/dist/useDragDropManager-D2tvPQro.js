import{g as m,r as c}from"./mainweb-FeQoYycK.js";import{i as d,D as E}from"./index-YDw7xnfG.js";var i,l;function O(){return l||(l=1,i=function e(t,r){if(t===r)return!0;if(t&&r&&typeof t=="object"&&typeof r=="object"){if(t.constructor!==r.constructor)return!1;var o,n,s;if(Array.isArray(t)){if(o=t.length,o!=r.length)return!1;for(n=o;n--!==0;)if(!e(t[n],r[n]))return!1;return!0}if(t.constructor===RegExp)return t.source===r.source&&t.flags===r.flags;if(t.valueOf!==Object.prototype.valueOf)return t.valueOf()===r.valueOf();if(t.toString!==Object.prototype.toString)return t.toString()===r.toString();if(s=Object.keys(t),o=s.length,o!==Object.keys(r).length)return!1;for(n=o;n--!==0;)if(!Object.prototype.hasOwnProperty.call(r,s[n]))return!1;for(n=o;n--!==0;){var u=s[n];if(!e(t[u],r[u]))return!1}return!0}return t!==t&&r!==r}),i}var w=O();const C=m(w),y=typeof window<"u"?c.useLayoutEffect:c.useEffect;function D(e,t,r){const[o,n]=c.useState(()=>t(e)),s=c.useCallback(()=>{const u=t(e);C(o,u)||(n(u),r&&r())},[o,e,r]);return y(s),[o,s]}function x(e,t,r){const[o,n]=D(e,t,r);return y(function(){const u=e.getHandlerId();if(u!=null)return e.subscribeToStateChange(n,{handlerIds:[u]})},[e,n]),o}function H(e,t,r){return x(t,e||(()=>({})),()=>r.reconnect())}function P(e,t){const r=[];return typeof e!="function"&&r.push(e),c.useMemo(()=>typeof e=="function"?e():e,r)}function T(e,t,r){const o=r.getRegistry(),n=o.addTarget(e,t);return[n,()=>o.removeTarget(n)]}function M(e,t,r){const o=r.getRegistry(),n=o.addSource(e,t);return[n,()=>o.removeSource(n)]}function k(e,t,r,o){let n;if(n!==void 0)return!!n;if(e===t)return!0;if(typeof e!="object"||!e||typeof t!="object"||!t)return!1;const s=Object.keys(e),u=Object.keys(t);if(s.length!==u.length)return!1;const g=Object.prototype.hasOwnProperty.bind(t);for(let a=0;a<s.length;a++){const f=s[a];if(!g(f))return!1;const v=e[f],h=t[f];if(n=void 0,n===!1||n===void 0&&v!==h)return!1}return!0}function F(e){return e!==null&&typeof e=="object"&&Object.prototype.hasOwnProperty.call(e,"current")}function R(e){if(typeof e.type=="string")return;const t=e.type.displayName||e.type.name||"the component";throw new Error(`Only native element nodes can now be passed to React DnD connectors.You can either wrap ${t} into a <div>, or turn it into a drag source or a drop target itself.`)}function S(e){return(t=null,r=null)=>{if(!c.isValidElement(t)){const s=t;return e(s,r),s}const o=t;return R(o),q(o,r?s=>e(s,r):e)}}function L(e){const t={};return Object.keys(e).forEach(r=>{const o=e[r];if(r.endsWith("Ref"))t[r]=e[r];else{const n=S(o);t[r]=()=>n}}),t}function p(e,t){typeof e=="function"?e(t):e.current=t}function q(e,t){const r=e.ref;return d(typeof r!="string","Cannot connect React DnD to an element with an existing string ref. Please convert it to use a callback ref instead, or wrap it into a <span> or <div>. Read more: https://reactjs.org/docs/refs-and-the-dom.html#callback-refs"),r?c.cloneElement(e,{ref:o=>{p(r,o),p(t,o)}}):c.cloneElement(e,{ref:t})}function V(){const{dragDropManager:e}=c.useContext(E);return d(e!=null,"Expected drag drop context"),e}export{y as a,P as b,H as c,T as d,F as i,M as r,k as s,V as u,L as w};
